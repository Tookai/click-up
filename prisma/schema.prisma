generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Project {
  // -----------------------------
  id         String     @id @default(uuid())
  // -----------------------------
  name       String     @unique
  // -----------------------------
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @default(now()) @updatedAt
  deletedAt  DateTime?
  // -----------------------------
  states     State[]
  priorities Priority[]
  tasks      Task[]
}

model State {
  // -----------------------------
  id        String    @id @default(uuid())
  // -----------------------------
  name      String    @unique
  code      String    @unique
  position  Int       @default(0)
  color     String    @default("blue")
  projectId String
  project   Project   @relation(fields: [projectId], references: [id])
  // -----------------------------
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  deletedAt DateTime?
  // -----------------------------
  tasks     Task[]

  @@unique([id, projectId])
}

model Priority {
  // -----------------------------
  id        String    @id @default(uuid())
  // -----------------------------
  name      String    @unique
  code      String    @unique
  position  Int       @default(0)
  color     String    @default("blue")
  projectId String
  project   Project   @relation(fields: [projectId], references: [id])
  // -----------------------------
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  deletedAt DateTime?
  // -----------------------------
  tasks     Task[]

  @@unique([id, projectId])
}

model Task {
  // -----------------------------
  id         String    @id @default(uuid())
  // -----------------------------
  name       String
  content    String?
  duration   Int?
  position   Int       @default(0)
  // -----------------------------
  projectId  String
  project    Project   @relation(fields: [projectId], references: [id])
  stateId    String
  state      State     @relation(fields: [stateId], references: [id])
  priorityId String?
  priority   Priority? @relation(fields: [priorityId], references: [id])
  // -----------------------------
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @default(now()) @updatedAt
  deletedAt  DateTime?

  // -----------------------------
  @@unique([id, projectId])
  @@unique([id, stateId])
  @@unique([id, priorityId])
}
